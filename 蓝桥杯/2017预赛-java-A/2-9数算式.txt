
标题：9数算式

观察如下的算式：

9213 x 85674 = 789314562

左边的乘数和被乘数正好用到了1~9的所有数字，每个1次。
而乘积恰好也是用到了1~9的所有数字，并且每个1次。

请你借助计算机的强大计算能力，找出满足如上要求的9数算式一共有多少个？

注意：
1. 总数目包含题目给出的那个示例。
2. 乘数和被乘数交换后作为同一方案来看待。

请提交一个整数，不要填写任何多余内容或说明文字。

答案：1625

代码：

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

public class Main {
	public static char[] number = {'0','1','2','3','4','5','6','7','8','9'};
	public static boolean[] choice = new boolean[10];
	public static int sum = 0;
	public static boolean checknum(int x){   // 用于判断最后答案是否包含1~9；
		String str = Integer.toString(x);
		Set<Character> test = new HashSet<Character>();
		char[] chars = str.toCharArray();
		for (char c : chars) {
			test.add(c);
		}
		if(test.size()==9&&!test.contains('0')) return true;
		else return false;
	}
	
	public static void cal(String num){		// 用于弄混数字
		if(num.length()==9){
			word(num.substring(0, 1), num.substring(1));
			word(num.substring(0, 2), num.substring(2));
			word(num.substring(0, 3), num.substring(3));
			word(num.substring(0, 4), num.substring(4));
			return;
		}
		for(int i=1;i<10;i++){
			if(!choice[i]){
				choice[i]=true;
				cal(num+number[i]);
				choice[i]=false;
			}
		}
	}
	public static void word(String x,String y){   // 用于计算
		int a = Integer.valueOf(x);
		int b = Integer.valueOf(y);
		int c = a*b;
		if(checknum(c)){
			sum+=1;
			System.out.println(a+"*"+b+"="+c);
		}
	}
	
	public static void main(String args[]){
		Arrays.fill(choice, false);
		cal("");
		System.out.println(sum);
	}
}
